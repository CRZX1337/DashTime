name: Build Debug APK

on:
  workflow_dispatch:  # Only manual triggering
    inputs:
      release_title:
        description: 'Custom release title (optional)'
        required: false
        type: string
      changelog:
        description: 'Release changelog (optional)'
        required: false
        type: string
        default: 'Automated debug build from GitHub Actions'
      use_latest_tag:
        description: 'Use debug-build-latest tag (overrides previous latest)'
        required: false
        type: boolean
        default: false

permissions:
  contents: write  # Required to create releases

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Fix gradle.properties
        run: |
          if [ -f "android/gradle.properties" ]; then
            sed -i '/org.gradle.java.home/d' android/gradle.properties
            echo "# Removed Windows JDK path for CI build" >> android/gradle.properties
          fi

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.29.3'
          channel: 'stable'

      - name: Flutter version
        run: flutter --version

      - name: Get dependencies
        run: flutter pub get
        
      - name: Accept Android SDK Licenses
        run: |
          yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses
          yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --install "ndk;29.0.13113456"

      - name: Build APK
        run: flutter build apk --debug

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: app-debug
          path: build/app/outputs/flutter-apk/app-debug.apk

      - name: Set release details
        id: release_details
        run: |
          # Set tag name
          if [ "${{ github.event.inputs.use_latest_tag }}" == "true" ]; then
            echo "tag_name=debug-build-latest" >> $GITHUB_OUTPUT
          else
            echo "tag_name=debug-build-${{ github.run_number }}" >> $GITHUB_OUTPUT
          fi
          
          # Set release title
          if [ "${{ github.event.inputs.release_title }}" != "" ]; then
            echo "title=${{ github.event.inputs.release_title }}" >> $GITHUB_OUTPUT
          elif [ "${{ github.event.inputs.use_latest_tag }}" == "true" ]; then
            echo "title=Latest Debug Build" >> $GITHUB_OUTPUT
          else
            echo "title=Debug Build ${{ github.run_number }}" >> $GITHUB_OUTPUT
          fi
          
          # Set release body
          if [ "${{ github.event.inputs.use_latest_tag }}" == "true" ]; then
            echo "body=This is always the latest debug build of DashTime. Release Notes: ${{ github.event.inputs.changelog }} | Build Number: ${{ github.run_number }} | Build Date: $(date +"%B %d, %Y")" >> $GITHUB_OUTPUT
          else
            echo "body=${{ github.event.inputs.changelog }}" >> $GITHUB_OUTPUT
          fi

      - name: Delete existing latest tag if needed
        if: ${{ github.event.inputs.use_latest_tag == 'true' }}
        run: |
          git tag -d debug-build-latest || true
          git push --delete origin debug-build-latest || true
        continue-on-error: true

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.release_details.outputs.tag_name }}
          name: ${{ steps.release_details.outputs.title }}
          body: ${{ steps.release_details.outputs.body }}
          draft: false
          prerelease: true
          files: build/app/outputs/flutter-apk/app-debug.apk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 